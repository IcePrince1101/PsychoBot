import telebot
from telebot import types

db = {}
db_progress = {}

# Вопросы
questions = ('Вопрос 1. Я чувствую себя эмоционально опустошенным после учебы.',
             'Вопрос 2. Я думаю, что самое важное для меня - это успеваемость.',
             'Вопрос 3. Утром я чувствую усталость и нежелание идти на пары.',
             'Вопрос 4. Я получаю удовольствие от учебы.',
             'Вопрос 5. Я чувствую, что общаюсь с некоторыми преподавателями, одногруппниками и другими студентами '
             'только формально, без лишних эмоций, и стремлюсь свести время общения с ними до минимума.',
             'Вопрос 6. Я чувствую прилив энергии в университете или когда учусь.',
             'Вопрос 7. Я чувствую угнетенность и апатию в университете или во время учебы.',
             'Вопрос 8. Я думаю, что моя учеба пригодится мне в будущем.',
             'Вопрос 9. В последнее время я стал/а более "черствым/ой" при общении со студентами/преподавателями в '
             'университете',
             'Вопрос 10. Я замечаю, что из-за учебы у меня появляется агрессия.',
             'Вопрос 11. Иногда я думаю о том, что стоило выбрать другое направление, специальность или университет.',
             'Вопрос 12. У меня много планов на будущее после университета, и я верю в их осуществление.',
             'Вопрос 13. Моя студенческая жизнь и учеба все больше меня разочаровывает.',
             'Вопрос 14. Мне кажется, что я слишком много учусь.',
             'Вопрос 15. Я задумываюсь о том, что не самостоятельно выбрал свою будущую специализацию, профессию или '
             'университет.',
             'Вопрос 16. Мне хочется уединиться и отдохнуть от всего и всех из-за учебы',
             'Вопрос 17. Я легко могу создать атмосферу доброжелательности и сотрудничества в учебной группе.',
             'Вопрос 18. Во время учебы я чувствую приятное оживление.',
             'Вопрос 19. Я думаю, что благодаря своей учебе я сделаю в жизни много действительно ценного.',
             'Вопрос 20. Мне важны мои оценки и моя успеваемость.',
             'Вопрос 21. Я чувствую равнодушие и потерю интереса ко многому, что радовало меня в учебе.',
             'Вопрос 22. В университете я спокойно справляюсь с эмоциональными проблемами.',
             'Вопрос 23. В последнее время мне кажется, что одногруппники все чаще перекидывают на меня свою '
             r'работу\груз своих проблем и обязанностей.',
             'Вопрос 24. Если моя успеваемость ниже, чем обычно, то у меня опускаются руки.'
             )
# Факты
facts = ('Это не лень. Выгорание складывается из трех чувств: истощения, цинизма (деперсонализации) и '
         'отсутствия эффективности. Истощение - это хроническая усталость, вызванная  чрезмерной нагрузкой. Цинизм - '
         'отстраненное отношение, которое начинают чувствовать многие люди, страдающие выгоранием. Они часто '
         'полностью теряют интерес к тому, чем занимаются. Недостаток проффесиональной эффективности возникает, '
         'когда человек, страдающий выгоранием, чувствует себя плохо и действует менее эффективно на учебе или '
         'работе, но ничего не может с этим сделать.',
         'Азиаты выгорают больше по статистике. Япония, Китай, Корея и другие азиатские страны известны своей '
         'жесткой трудовой этикой. Люди нередко задерживаются в офисах допоздна каждый день, пропускают отпуск и '
         'работают сверхурочно по выходным. Все это (и многое другое) способствует высокому уровню выгорания в этих '
         'странах.',
         'Эктраверты выгорают меньше. Если вы — экстраверт, возможно, вы не так склонны к выгоранию, '
         'как ваши друзья интроверты. Экстраверты, как правило, настроены более позитивно, что помогает им вовремя '
         'снизить уровень переутомления. Люди, которые открыты к общению, эмоционально стабильны, поэтому у них '
         'меньше шансов развить выгорание.',
         'Выгорание не равно депрессии. Выгорание и депрессия могут вызывать очень похожие чувства, '
         'поэтому легко спутать одно с другим. Тем не менее, технически это не одно и то же. Они классифицируются как '
         'два разных заболевания. Выгорание больше связано с проблемами на рабочем или учебном месте. Но, '
         'к сожалению, именно из выгорания может развиться депрессия.',
         'Выгорание влияет на мужчин и женщин по разному. Некоторые исследования показали, что выгорание '
         'по-разному '
         'влияет на мужчин и женщин. Например, женщины чаще чувствуют эмоциональное истощение от выгорания, '
         'в то время как мужчины с большей вероятностью будут чувствовать цинизм и отстраненность. Исследование '
         '2017-2020 года показало, что негативные жизненные события и высокие требования на учебе и работе вызвали '
         'выгорание только у женщин. Это может быть связано с тем, что женщины чаще испытывают давление и на учебе и '
         'работе, и дома.',
         '"Помогающие" профессии. Выгорание может повлиять на любого человека, выполняющего любую работу. Но '
         'некоторые виды занятий подвержены более высокому риску. Согласно исследованию журнала «Гарвард Бизнес '
         'Ревью», медсестры, врачи, социальные работники, учителя, психологи и руководители испытывают эмоциональное '
         'выгорание чаще, чем представители других профессий. Это происходит из-за беспокойства, бессонницы, '
         'слишком частого общения с другими людьми и физического истощения, которые обычно возникают во время работы.',
         'Технологии вредят. Некоторые эксперты считают, что постоянный доступ к технологиям способствует '
         'психическому переутомлению. Хотя технологии могут быть отличным инструментом, они также вызывают чувство '
         'напряжения, которое увеличивает шансы на усталость. Если вы никогда не можете оторваться от проверки '
         'электронной почты или чтения отчетов, как вы вообще сделаете настоящий перерыв на учебе?',
         'Синдром выгорания может касаться как одного человека, так и целого коллектива. Если нет '
         'профилактики выгорания, то в итоге страдает не один человек, а вся команда. Тоже самое касается и учебной '
         'группы. В компании/университете начинается постоянная текучка кадров, страдает производительность труда и '
         'учебы, возникают конфликты, открытые и скрытые, у людей нет инициативы - это все признаки выгорания всего '
         'коллектива, особенно если раньше было по-другому.',
         'Выгорание проявляется нарастающим безразличием. Сначала становится все равно на свои обязанности. '
         'Затем появляется негатив к преподавателям, другим студентам и родным — становишься токсичным. В итоге '
         'приходишь к общей неудовлетворенности учебой, ухудшению качества жизни, появляется ощущение безнадежности и '
         'беспомощности, эмоциональная нестабильность и пессимизм. Иногда на этом фоне развиваются другие '
         'невротические и психосоматические расстройства.',
         )
# Симптомы
simptoms = ('"Сон? Не слышали." При выгорании не имеет значения то, сколько ты поспишь. Даже если ты '
            'ложишься рано и встаешь в обед следующего дня, ты можешь чувствовать истощение и дальше. Выгорание может '
            'привести и к обратным последствиям. Часто на фоне перегрузок может возникать бессонница. Даже если ты '
            'безумно устал, к сожалению, может быть тяжело или невозможно уснуть.',
            '"Мотивация Goodbye." У студентов, которые столкнулись с выгоранием к учебе, конечно же '
            'отмечается невыносимое желание (не только желание) посещать пары, брать доклады, выполнять домашку и '
            'делать другие очень важные учебные дела. Сюда можно отнести и пропажу вдохновения и творческой мотивации '
            'к проектам или дополнительным занятиям; отсутствие интереса к темам и дисциплинам, которые ранее '
            'вызывали восторг.',
            '"Агррррр." Стоит отметить возможную повышенную раздражительность и возникновение агрессии, '
            'даже по мелочам. Как только студент слышит слова связанные с универом – всё. Конечно, '
            'это не единственный пример. Безосновательную злость может вызывать как сами занятия, пары, расписание, '
            'утренние подъемы, так и люди: одногруппники, преподаватели, работники и др.',
            '"Мама, не кричи, я не ленивец, я - прокрастинатор!" Когда ты уже не в состоянии даже думать '
            'об учебе, задания все еще остаются на тебе. Конечно же, ты сам это понимаешь. Начинаешь считать дни, '
            'откладывать до последнего и прокрастинировать. Горим мы – горят дедлайны. P.S. Прокрастинация (не равно) '
            'лень. Если лень – это нежелание что-то делать или недостаточное желание (просто потому, что не хочу!), '
            'то прокрастинация – это постоянное их откладывание «в долгий ящик» и на потом, а после – выполнение в '
            'крайний срок (Сделаю… Но позже…Начну с понедельника!). Самое важное отличие в том, что лень – пассивное '
            'состояние. Студент просто не делает. А вот прокрастинация – активное. Он понимает, что это НУЖНО и '
            'ВАЖНО, он хочет это сделать и даже планирует, но… откладывает и начинает заниматься менее важными '
            'вещами.',
            '"Я - неуч?" Из-за выгорания часто появляется и неуверенность в себе, а, следовательно, '
            'в своих академических успехах и положительных оценках.',
            '"Болячки". На фоне появления учебного выгорания, могут начать проявляться и различные '
            'физические симптомы. Из-за перенапряжения мышц от стрессового состояния возникают головные боли, '
            'частые спазмы, перенапряжение в челюсти и боль в мышцах. Также падает иммунитет в целом, '
            'и студент начинает чаще болеть.',
            '"Вредности." Частенько появляются и вредные привычки, характерные для стрессового '
            'состояния. Например, студент может начать: переедать или не кушать вовсе, начать чаще или в целом начать '
            'курить, начать грызть ногти или кутикулу, ложиться очень поздно спать и др.',
            '"А вы кто?" От постоянного воздействия стресса появляется рассеянность и забывчивость. '
            'Вдобавок, может теряться и внимание: студент перестает быть способен сосредотачиваться на учебе и '
            'удерживать внимание на занятиях и материале.',
            '"Жизнь - тлен." Появляется повышенная тревога, апатия, постоянно напряженное нервное '
            'состояние. Может развиваться и депрессия.')
print(len(simptoms))
# Чек-лист
check_list = ('Планируй свое время работы и отдыха. Очень здорово, если ты сможешь составлять расписание, тогда и в '
              'голове все уляжется. Чаще нам кажется, что дел оооочень много и мы откладываем…откладываем…. И делаем '
              'все вместе на крайних сроках выполнения. А зачем?',
              'Помни, самое главное – это беречь себя. Да, порой у нас очень много важных дел, но ТЫ и твое здоровье '
              'в любом раскладе важнее всего. Планируй в тяжелых днях и  промежутки на отдых, а в неделях – хотя бы '
              'денёк. При этом, все приятное – планируй заранее, а не «если получится».',
              'Не пытайся перенасытить каждый день, час или минуту чем-то супер важным. Ты имеешь право иногда ничего '
              'не делать! Разрешай себе просто побалдеть на кровати, посмотреть видео или полазить в интернете.',
              'Как думаешь, в школе или в университете перерывы предусмотрены только, чтобы сходить в туалет? Конечно '
              'же, нет. Вот и ты должен давать себе маленькие перерывы в учебные часы. Отдохни, сделай разминку, '
              'выпей чай и съешь вкусняшку. ',
              "Ты слышал когда-нибудь про Пирамиду Маслоу? Этот велики психолог показал наглядно, что самая первая и "
              "самая важная ступенька – это твои самые простые потребности (сон, еда, вода). Без этих базовых вещей "
              "нормальный человек просто не выживет. А ты пытаешься учиться, пренебрегая ими? Прекращай)",
              'Конечно, не стоит себя перетруждать еще и спортом. Но, например, йога, пилатес, плаванье, '
              'легкие пробежки и другие виды спорта очень круто помогают разгружать голову.  Простые прогулки в парке '
              'под любимую музыку – тоже считаются! Это тоже разгрузка.',
              'Попробуй вставить в каждый день какую-нибудь фишку, которая тебе по душе. Например, когда ты выходишь '
              'с учебы, то можно купить кофе или булочку. Это добавит капельку мотивации в ежедневную рутину.',
              'Не бойся просить о помощи. Если тебе плохо, попробуй поделиться этим с семьей или друзьями. Каждому '
              'человеку нужна поддержка. Если ты пока не готов говорить об этом с ними – есть волшебные телефоны '
              'психологической поддержки, которые ты можешь найти в конце гайда. Это не стыдно! Это правильно! Помни '
              '– ты не одинок.',
              )

# список вопрос с баллами от 1 до 7
list_grow = (1, 2, 3, 5, 7, 9, 10, 11, 13, 14, 15, 16, 20, 21, 23, 24)
# список вопросов с баллами от 7 до 0
list_less = (4, 6, 8, 12, 17, 18, 19, 22)


def result(id_user):  # показ результатов пользователя id_user
    result_points = db.get(id_user)
    if result_points < 34:
        return f"У тебя крайне низкие значения по шкале студенческого выгорания.  А значит – все в порядке! Думаю, " \
               f"что тебе нравится учеба и твое окружение в университете, а это здорово! Продолжай в том же духе! " \
               f"Надеюсь, я смогу рассказать тебе интересную информацию о выгорании у студентов, чтобы ты знал о нем " \
               f"и смог (если что) вовремя действовать или помочь своим друзьям. "
    elif result_points < 69:
        return f"У тебя низкие значения по шкале студенческого выгорания. А это значит – что все хорошо! Думаю, " \
               f"что ты радостно проводишь время в университете, общаешься с ребятами, учеба тебя не раздражает, " \
               f"а приносит удовольствия и знания. Продолжай в том же духе! А я расскажу тебе про студенческое " \
               f"выгорание. Ведь кто предупрежден – тот вооружен. "
    elif result_points < 103:
        return f"У тебя средние значения по шкале студенческого выгорания. Желтый уровень опасности… Возможно учеба " \
               f"тебе дается немного тяжело или ты перестаешь получать удовольствие, которое было раньше? Что ж, " \
               f"отставить панику! Я расскажу тебе все, что знаю про студенческое выгорание и то, как можно себе " \
               f"помочь! Ты справишься, я в тебя верю! "
    elif result_points <= 139:
        return f"У тебя высокие значения по шкале студенческого выгорания. Пу-пу-пу, оранжевый уровень опасности. " \
               f"Именно для этого я и подготовил наши следующие разделы. Я расскажу тебе все, что знаю сам. В конце " \
               f"поделюсь местами, куда можно обратиться за помощью к специалистам. Самое главное – не унывай, " \
               f"ты справишься! "
    else:
        return f"У тебя крайне высокие значения по шкале студенческого выгорания. Вызываем подмогу, красный уровень " \
               f"опасности! Но не вешаем нос! В современном обществе синдром выгорания отнюдь не редкое явление. А " \
               f"так как  ты узнаешь о нем прямо сейчас – значит ты на полпути к помощи самому себе. Я поделюсь с " \
               f"тобой всем, что знаю, а в конце расскажу, куда можно обратиться за поддержкой специалистов. Я верю, " \
               f"что ты справишься! "


def points(id_user, point):  # Начисление point баллов пользователю id_user
    if id_user in db.keys():
        db[id_user] += point
    else:
        db[id_user] = point


# points(1233421, 12)
# print(result(1233421))

bot = telebot.TeleBot('5486108452:AAFBk2jnPex1YSBhKpp63Gx7w3O8d6C25Iw', parse_mode=None)


@bot.message_handler(commands=['start'])  # создаем команду
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = telebot.types.KeyboardButton("Что я могу?")
    markup.add(button1)
    texts = f"Привет, {message.from_user.first_name}!) Меня зовут BOSS и я твой гайд по студенческому выгоранию 🔥"
    bot.send_message(message.chat.id,
                     texts,
                     reply_markup=markup)
    # print(message.from_user.id)


@bot.message_handler(content_types=['text'])
def func(message):
    if message.text == 'Что я могу?':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Что такое СЭВ?')
        btn2 = types.KeyboardButton('Что такое СПВ?')
        btn3 = types.KeyboardButton('Что такое ССВ?')
        markup.add(btn1, btn2, btn3)
        text = 'Я помогаю  студентам в борьбе с синдромом выгорания ❤️‍🔥 \nМоя цель: \n🔥 протестировать тебя на ' \
               'уровень ' \
               'учебного выгорания \n🔥 рассказать о таком понятии, как выгорание в учебе  \n🔥 подарить чек-лист ' \
               'самопомощи, а также подборку книг, фильмов и других ресурсов, связанных с выгоранием  \n🔥 помочь ' \
               'найти возможность получить  бесплатную онлайн-поддержку' \
               '\nНо для лучшего понимания темы стоит узнать "Что же такое выгорание". Давай разделим это понятие на ори и узнаем про каждое?' \
               '\n- синдром эмоционального выгорания (СЭВ)' \
               '\n- синдром профессионального выгорания (СПВ) ' \
               '\n- синдром студенческого выгорания (ССВ)'
        bot.send_message(message.chat.id,
                         text,
                         reply_markup=markup)

    elif message.text in ('Что такое СЭВ?',
                          'Что такое СПВ?',
                          'Что такое ССВ?'):
        if message.text == 'Что такое СЭВ?':
            answer = 'Эмоциональное выгорание распространяется на все сферы жизни. В этот период человек ничего не ' \
                     'хочет делать, тратить энергию на обычные дела. Но не стоит путать с депрессией. '
        elif message.text == 'Что такое СПВ?':
            answer = 'Профессиональное выгорание это когда человека раздражает все на рабочем месте. То есть он не ' \
                     'может себя заставить что-то делать, чувствует полное отсутствие сил. Это более узкое понятие ' \
                     'эмоционального выгорания. То есть по сути это одно и то же. Появляется такое выгорание из-за ' \
                     'стресса на рабочем месте, который накапливается. '
        elif message.text == 'Что такое ССВ?':
            answer = 'Студенческое выгорание – это понятие, очень тесно связанное с профессиональным выгоранием. Это ' \
                     'все тоже истощение ресурсов человека,  под воздействием стресса, но по причине переутомления во ' \
                     'время учебы. В студенческой жизни стресс могут вызывать такие причины, как: огромное количество ' \
                     'заданий и пар, горящие дедлайны, натянутые взаимоотношения с преподавателями, ' \
                     'обоюдные конфликты (как с сотрудниками, так и с одногруппниками), нехватка или отсутствие сна, ' \
                     'отдыха, личного времени и многое другое. '
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = telebot.types.KeyboardButton('Опрос')
        btn2 = telebot.types.KeyboardButton('Назад')
        btn3 = telebot.types.KeyboardButton('Пропустить опрос')
        markup.add(btn1, btn2, btn3)
        bot.send_message(message.chat.id,
                         text=answer,
                         reply_markup=markup)


    elif message.text == 'Наш сайт.':
        markup = telebot.types.InlineKeyboardMarkup()
        btn = telebot.types.InlineKeyboardButton('Переход на страницу',
                                                 url='https://proglib.io/p/polnyy-fullstek-pishem-sayt-na-django-vue-i-graphql-2021-07-22')
        markup.add(btn)
        bot.send_message(message.chat.id,
                         text='Подтверди переход на сайт)',
                         reply_markup=markup)

    elif message.text == 'Опрос':
        # обнуляем результаты после ответа на первый вопрос для правильного начисления баллов
        db[message.from_user.id] = 0
        db_progress[message.from_user.id] = 1
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = telebot.types.KeyboardButton('Никогда')
        btn2 = telebot.types.KeyboardButton('Очень редко')
        btn3 = telebot.types.KeyboardButton('Редко')
        btn4 = telebot.types.KeyboardButton('Иногда')
        btn5 = telebot.types.KeyboardButton('Часто')
        btn6 = telebot.types.KeyboardButton('Очень часто')
        btn7 = telebot.types.KeyboardButton('Всегда')
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7)
        bot.send_message(message.chat.id,
                         text=questions[0],
                         reply_markup=markup)

    elif (message.text in ('Никогда', 'Очень редко', 'Редко', 'Иногда', 'Часто', 'Очень часто', 'Всегда')) and (
            db_progress[message.from_user.id] in list_grow) and (
            db_progress[message.from_user.id] in range(1, len(questions))):
        # Добавляем 1 для перехода на следующий вопрос
        db_progress[message.from_user.id] += 1
        if message.text == 'Никогда':
            points(message.from_user.id, 1)
        elif message.text == 'Очень редко':
            points(message.from_user.id, 2)
        elif message.text == 'Редко':
            points(message.from_user.id, 3)
        elif message.text == 'Иногда':
            points(message.from_user.id, 4)
        elif message.text == 'Часто':
            points(message.from_user.id, 5)
        elif message.text == 'Очень часто':
            points(message.from_user.id, 6)
        elif message.text == 'Всегда':
            points(message.from_user.id, 7)
        # следующий вопрос
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = telebot.types.KeyboardButton('Никогда')
        btn2 = telebot.types.KeyboardButton('Очень редко')
        btn3 = telebot.types.KeyboardButton('Редко')
        btn4 = telebot.types.KeyboardButton('Иногда')
        btn5 = telebot.types.KeyboardButton('Часто')
        btn6 = telebot.types.KeyboardButton('Очень часто')
        btn7 = telebot.types.KeyboardButton('Всегда')
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7)
        bot.send_message(message.chat.id,
                         text=questions[db_progress[message.from_user.id] - 1],
                         reply_markup=markup)

    elif (message.text in ('Никогда', 'Очень редко', 'Редко', 'Иногда', 'Часто', 'Очень часто', 'Всегда')) and (
            db_progress[message.from_user.id] in list_less) and (
            db_progress[message.from_user.id] in range(1, len(questions))):
        # Добавляем 1 для перехода на следующий вопрос
        db_progress[message.from_user.id] += 1
        if message.text == 'Никогда':
            points(message.from_user.id, 7)
        elif message.text == 'Очень редко':
            points(message.from_user.id, 6)
        elif message.text == 'Редко':
            points(message.from_user.id, 5)
        elif message.text == 'Иногда':
            points(message.from_user.id, 4)
        elif message.text == 'Часто':
            points(message.from_user.id, 3)
        elif message.text == 'Очень часто':
            points(message.from_user.id, 2)
        elif message.text == 'Всегда':
            points(message.from_user.id, 1)
        # следующий вопрос
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = telebot.types.KeyboardButton('Никогда')
        btn2 = telebot.types.KeyboardButton('Очень редко')
        btn3 = telebot.types.KeyboardButton('Редко')
        btn4 = telebot.types.KeyboardButton('Иногда')
        btn5 = telebot.types.KeyboardButton('Часто')
        btn6 = telebot.types.KeyboardButton('Очень часто')
        btn7 = telebot.types.KeyboardButton('Всегда')
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7)
        bot.send_message(message.chat.id,
                         text=questions[db_progress[message.from_user.id] - 1],
                         reply_markup=markup)

    elif (message.text in ('Никогда', 'Очень редко', 'Редко', 'Иногда', 'Часто', 'Очень часто', 'Всегда')) and (
            db_progress[message.from_user.id] in list_less) and (db_progress[message.from_user.id] == len(questions)):
        # Добавляем 1 для перехода на следующий вопрос
        db_progress[message.from_user.id] += 1
        if message.text == 'Никогда':
            points(message.from_user.id, 7)
        elif message.text == 'Очень редко':
            points(message.from_user.id, 6)
        elif message.text == 'Редко':
            points(message.from_user.id, 5)
        elif message.text == 'Иногда':
            points(message.from_user.id, 4)
        elif message.text == 'Часто':
            points(message.from_user.id, 3)
        elif message.text == 'Очень часто':
            points(message.from_user.id, 2)
        elif message.text == 'Всегда':
            points(message.from_user.id, 1)
        # следующий вопрос
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = telebot.types.KeyboardButton('Факты')
        btn2 = telebot.types.KeyboardButton('Симптомы')
        btn3 = telebot.types.KeyboardButton('Чек-лист самопомощи')
        markup.add(btn1, btn2, btn3)
        bot.send_message(message.chat.id,
                         text=result(
                             message.from_user.id) + 'Я подобрал для тебя интересные факты о синдроме выгорания и симптомы, характерные для него',
                         reply_markup=markup)

    elif (message.text in ('Никогда', 'Очень редко', 'Редко', 'Иногда', 'Часто', 'Очень часто', 'Всегда')) and (
            db_progress[message.from_user.id] in list_grow) and (db_progress[message.from_user.id] == len(questions)):
        # Добавляем 1 для перехода на следующий вопрос
        db_progress[message.from_user.id] += 1
        if message.text == 'Никогда':
            points(message.from_user.id, 1)
        elif message.text == 'Очень редко':
            points(message.from_user.id, 2)
        elif message.text == 'Редко':
            points(message.from_user.id, 3)
        elif message.text == 'Иногда':
            points(message.from_user.id, 4)
        elif message.text == 'Часто':
            points(message.from_user.id, 5)
        elif message.text == 'Очень часто':
            points(message.from_user.id, 6)
        elif message.text == 'Всегда':
            points(message.from_user.id, 7)
        # следующий вопрос
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = telebot.types.KeyboardButton('Факты')
        btn2 = telebot.types.KeyboardButton('Симптомы')
        btn3 = telebot.types.KeyboardButton('Чек-лист самопомощи')
        markup.add(btn1, btn2, btn3)
        bot.send_message(message.chat.id,
                         text=result(
                             message.from_user.id) + 'Я подобрал для тебя интересные факты о синдроме выгорания и симптомы, характерные для него',
                         reply_markup=markup)

    elif message.text == 'Факты':
        db_progress[message.from_user.id] = 0
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Давай)')
        btn2 = types.KeyboardButton('Вернуться в главное меню.')
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id,
                         text='Специально для тебя я собрал самые интересные факты о синдроме выгорания 😍 Давай вместе их посмотрим?',
                         reply_markup=markup)


    elif message.text == 'Симптомы':
        db_progress[message.from_user.id] = 0
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Давай!')
        btn2 = types.KeyboardButton('Вернуться в главное меню.')
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id,
                         text='После долгой и продолжительной нагрузкой из-за тяжелых учебных будней вполне '
                              'естественно чувствовать себя уставшим и хотеть только упасть в постельку. Но есть '
                              'несколько отличительных черт усталости и студенческого выгорания. Давай разберемся в '
                              'них?',
                         reply_markup=markup)
    elif message.text in ('Давай)', 'Следующий факт') and db_progress[message.from_user.id] < len(facts) - 1:
        print(db_progress[message.from_user.id])
        db_progress[message.from_user.id] += 1
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Следующий факт')
        btn2 = types.KeyboardButton('Вернутся назад')
        btn3 = types.KeyboardButton('Чек-лист самопомощи')
        markup.add(btn1, btn2, btn3)
        bot.send_message(message.chat.id,
                         text=facts[db_progress[message.from_user.id]],
                         reply_markup=markup)
    elif message.text in ('Давай)', 'Следующий факт') and db_progress[message.from_user.id] >= len(facts) - 1:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = telebot.types.KeyboardButton('Симптомы')
        btn2 = telebot.types.KeyboardButton('Чек-лист самопомощи')
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id,
                         text='Это был последний факт, который я подобрал для тебя. Пойдем дальше🏃‍♂',
                         reply_markup=markup)

    elif message.text in ('Давай!', 'Следующий симптом') and db_progress[message.from_user.id] < len(simptoms) - 1:
        db_progress[message.from_user.id] += 1
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Следующий симптом')
        btn2 = types.KeyboardButton('Вернутся назад')
        btn3 = types.KeyboardButton('Чек-лист самопомощи')
        markup.add(btn1, btn2, btn3)
        bot.send_message(message.chat.id,
                         text=simptoms[db_progress[message.from_user.id]],
                         reply_markup=markup)
    elif message.text in ('Давай)', 'Следующий симптом') and db_progress[message.from_user.id] >= len(simptoms) - 1:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = telebot.types.KeyboardButton('Факты')
        btn2 = telebot.types.KeyboardButton('Чек-лист самопомощи')
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id,
                         text='Это был последний симптом, который я подобрал. Полетели дальше 🧚‍♀️',
                         reply_markup=markup)

    elif message.text == 'Чек-лист самопомощи':
        db_progress[message.from_user.id] = 0
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Дальше')
        markup.add(btn1)
        bot.send_message(message.chat.id,
                         text='Нашел что-то, что сопровождает тебя уже сейчас? Значит, время что-то предпринимать! '
                              'Ведь так важно не сгореть, особенно если дело касается твоего счастливого будущего! '
                              'Как поется в одной песне:\nГори, но не сжигай \nГори, чтобы светить!',
                         reply_markup=markup)

    elif message.text in ('Дальше', 'Еще один совет') and db_progress[message.from_user.id] < len(check_list) - 1:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Я не справляюсь сам')
        btn2 = types.KeyboardButton('Еще один совет')
        markup.add(btn2, btn1)
        bot.send_message(message.chat.id,
                         text=check_list[db_progress[message.from_user.id]],
                         reply_markup=markup)
        db_progress[message.from_user.id] += 1

    elif message.text in ('Дальше', 'Еще один совет') and db_progress[message.from_user.id] >= len(check_list) - 1:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Подборка')
        btn2 = types.KeyboardButton('Я не справляюсь сам')
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id,
                         text='Дабы укрепить теорию, я подготовил для тебя подборку фильмов, книг, подкастов, видео, '
                              'сайтов, telegram-каналов и других ресурсов о выгорании и психологии.  Чтобы получить '
                              'PDF-файл тебе нужно перейти по данной ссылке',
                         reply_markup=markup)

    elif message.text == 'Я не справляюсь сам':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Служба телефона доверия')
        btn2 = types.KeyboardButton('Сайты помощи')
        btn3 = types.KeyboardButton('Бесплатные консультации')
        btn4 = types.KeyboardButton('Консультации у психологов и поиск специалиста')
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.chat.id,
                         text='Если ты понимаешь, что тебе нужна помощь специалистов , я предлагаю тебе такие пути '
                              'решения: ',
                         reply_markup=markup)

    elif message.text == 'Служба телефона доверия':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Спасибо')
        btn2 = types.KeyboardButton('Какую еще помощь я могу получить?')
        markup.add(btn1, btn2)
        text = 'Горячая линия Выгоранию.нет 8-800-600-36-29 (круглосуточно)' \
               '\nТелефон доверия для молодежи и подростков 8-800-7000-183' \
               '\nМинОбрНауки оказывает психологическую поддержку студентам, в том числе учащимся-иностранцам. Получить помощь студенты могут по телефону 8-800-222-55-71.' \
               '\nМолодежный телефон доверия 8-863-237-48-48' \
               '\nКруглосуточная экстренная телефонная служба МЧС, оказывающая психологическую помощь по всей России: 8-495-989-50-50' \
               '\n Многопрофильная психологическая помощь всем взрослым. Дежурят психотерапевты, медицинские психологи и врачи-психиатры  8-800-200-47-03 (круглосуточно)'
        bot.send_message(message.chat.id,
                         text,
                         reply_markup=markup)
    elif message.text == 'Сайты помощи':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Спасибо')
        btn2 = types.KeyboardButton('Какую еще помощь я могу получить?')
        markup.add(btn1, btn2)
        text1 = '[сайте](https:\/\/psi\.mchs\.gov\.ru\/)'
        text2 = '[«Твоя территория»](https:\/\/www\.xn--b1agja1acmacmce7nj\.xn--80asehdb\/)'
        text3 = '[«ВКонтакте»](https:\/\/vk.com\/tvoya_territoria)'
        text = 'Анонимно связаться с психологами службы МЧС можно двумя способами: написать в онлайн чат на ' + \
               text1 + \
               ' или отправить письмо по электронной почте\. Ответ на него придёт в течение недели\. ' \
               'Консультанты работают ежедневно с 13:00 до 23:00 по московскому времени\. \nОнлайн служба' + \
               text2 + \
               'для помощи подросткам и молодежи, где получится конфиденциально рассказывать о волнующих проблемах\. ' \
               'Консультанты отвечают на вопросы в чате на сайте проекта ежедневно с 15:00 до 22:00 по московскому ' \
               'времени\. ' \
               'Можно также отправить психологам письмо по электронной почте, ответ придёт в течение 4–5 дней\. ' \
               '\nУ проекта есть группа в соцсети' + text3
        bot.send_message(message.chat.id,
                         text,
                         parse_mode='MarkdownV2',
                         reply_markup=markup)
    elif message.text == 'Бесплатные консультации':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Спасибо')
        btn2 = types.KeyboardButton('Какую еще помощь я могу получить?')
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id,
                         text='[Психологическая помощь «Ярославна»](https://yaroslavna.help/)'
                              '\nСлужбу бесплатной психологической помощи изначально создали для женщин, оказавшихся в '
                              'кризисных ситуациях, но сейчас позвонить в «Ярославну» можно с любой проблемой\. '
                              'Ответят психотерапевты из Института практической психологии и психоанализа\. После '
                              'разговора предложат записаться на три бесплатные личные консультации\.\nЗадать вопрос '
                              'специалистам получится и через онлайн форму\. Ответ могут опубликовать на сайте без '
                              'указания личных данных\. '
                              '\n[Московская служба психологической помощи населению при департаменте труда и социальной защиты населения города Москвы](http://msph.ru/)'
                              '\nМосквичи могут получить пять бесплатных индивидуальных сессий в год с психологом '
                              'службы\. Но экстренную помощь оказывают и тем, кто не живёт в столице\. Для этого '
                              'работает круглосуточная горячая линия и консультации по электронной почте\. Также на '
                              'сайте можно записаться на вебинары с психологами и обсудить свой вопрос на форуме\. '
                              '\n[PsySovet](https://psysovet.ru/)'
                              '\nPsySovet — сервис для подбора психологов\. Но на сайте проекта можно бесплатно задать '
                              'специалистам любой волнующий вопрос\. Ваша переписка с психологом будет видна всем '
                              'пользователям\. Фамилию и настоящее фото указывать необязательно, так что консультация '
                              'останется анонимной\.'
                              '\n[Консультации магистрантов НИУ ВШЭ](https://www.hse.ru/ma/therapy/news/352754028.html)'
                              '\nВ этом проекте помощь оказывают студенты и выпускники магистерской программы '
                              '«Психоанализ и психоаналитическая психотерапия» Высшей школы экономики\. Чтобы получить '
                              'три бесплатные индивидуальные консультации, нужно заполнить короткую заявку\. Сессии с '
                              'психологами проходят онлайн: в Skype, Zoom, Viber и других сервисах\.'
                              '\n[Психологический центр «Открытого пространства»](https://ospace.org/psyhelp)'
                              '\nВ центре проводят бесплатные конфиденциальные консультации и серии встреч\. Психологи в '
                              'первую очередь работают с активистами, но могут оказать помощь всем, кто испытывает '
                              'тревогу из за происходящего в мире\. Формат сессий специалисты подбирают индивидуально\. '
                              'Записаться можно на сайте НКО или через чат бот в Telegram\. '
                              '\n[Гуманитарный проект Ассоциации EMDR России](https://t.me/+IuWFnFLwV6E5Yjgy)'
                              '\nEMDR — это психотерапевтический метод, который часто используют при работе с '
                              'травматическим опытом\. Специалисты, практикующие EMDR, с понедельника по субботу '
                              'проводят бесплатные групповые сессии для всех, кому нужна поддержка\. Задать вопрос '
                              'психологам кураторам и найти расписание консультаций можно в телеграм канале проекта\.',
                         parse_mode='MarkdownV2',
                         reply_markup=markup)
    elif message.text == 'Консультации у психологов и поиск специалиста':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Спасибо')
        btn2 = types.KeyboardButton('Какую еще помощь я могу получить?')
        markup.add(btn1, btn2)
        text = 'Я подготовил для вас список полезных сайтов:' \
               '\n[Профессиональное сообщество клиент\-центрированных психотерапевтов](http://www.carl\-rogers.ru/) ' \
               ' — Объединение клиент\-центрированных психологов и психотерапевтов с едиными этическими принципами и ' \
               'высоким уровнем профессиональной подготовки;' \
               '\n[Ассоциация когнитивно\-поведенческой психотерапии](<http://associationcbt.ru/specialists>) —  ' \
               'организованная в Санкт\-Петербурге, она объединяет отличных специалистов из разных городов России;' \
               '\n[Российская ассоциация когнитивно\-поведенческих психологов](http://russian-cbt.ru/members/) — ' \
               'ещё одно профессиональное сообщество серьёзно подкованных специалистов;' \
               '\n[Общество семейных консультантов и психотерапевтов](http://www.supporter.ru/ru/o-nas/persons) ' \
               '— здесь можно найти специалиста, который будет работать с семейной парой;' \
               '\n[Российское общество психиатров](http://www.psychiatr.ru/) —  объединяет врачей, ' \
               'специализирующихся на нарушениях психики;' \
               '\n[Московский гештальт институт](https://gestalt.ru/gruppy/terapevt/http:/maap.ru/cons/83/) — на ' \
               'этом сайте вы получите информацию о психологах, практикующих гештальт\-подход;' \
               '\n[Общество психоаналитической терапии](http://spp.org.ru/experts/) — специалисты этого ' \
               'объединения работают в направлении, выросшем из классического психоанализа;' \
               '\n[Московский институт трансактного анализа](http://www.i\-ta.ru/psichologi/) — ещё одно ' \
               'популярное сегодня направление психотерапии и профессионалы, которые его практикуют;' \
               '\n[Институт психотерапии и  клинической психологии](https://psyinst.moscow/prepodavateli/) — ' \
               'возможно, вы найдёте своего специалиста среди преподавателей института;' \
               '\n[Российская психотерапевтическая ассоциация](http://rpa\-russia.ru/) — объединяет различных ' \
               'профессионалов в области психического здоровья;' \
               '\n[Российское общество аналитической психологии](http://roapinfo.ru/?page_id=91) — объединение ' \
               'специалистов, способных вести длительную глубинную работу;' \
               '\n[Московское психоаналитическое общество](http://psychoanalysis\-mps.ru/about/members/) — ' \
               'объединяет сертифицированных психоаналитиков;' \
               '\n[Мета](https://bemeta.co/) — сервис выберет психотерапевта под ваш запрос и бюджет\. Здесь ' \
               'можно найти специалиста самостоятельно или попросить помощи у эксперта\. Формат встречи — онлайн или ' \
               'очно в Москве или Санкт\-Петербурге;' \
               '\n[Новая практика](https://new\-praxis.ru/) — сервис предлагает несколько психотерапевтов на ' \
               'основе вашей анкеты\. Если из предложенных вариантов никто не подошел, можно выбрать еще раз ' \
               'бесплатно\. Формат встреч — онлайн или очно в Москве;' \
               '\n[B17\.ru](https://www.b17.ru/help/lider/) — сайт для тех, кто нуждается в психологической ' \
               'помощи или просто интересуется психологией\. Здесь опубликованы анкеты консультирующих психологов и ' \
               'отзывы тех, кто с ними уже работал\. По анкетам можно найти своего специалиста\.'
        bot.send_message(message.chat.id,
                         text,
                         parse_mode='MarkdownV2',
                         reply_markup=markup)

    elif message.text == 'Какую еще помощь я могу получить?':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Служба телефона доверия')
        btn2 = types.KeyboardButton('Сайты помощи')
        btn3 = types.KeyboardButton('Бесплатные консультации')
        btn4 = types.KeyboardButton('Консультации у психологов и поиск специалиста')
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.chat.id,
                         text='Вот возможные пути решения: ',
                         reply_markup=markup)



    elif message.text == 'Подборка':
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton('PDF-файл', url='https://disk.yandex.ru/d/_EhG03QOsS4C8g')
        markup.add(btn)
        bot.send_message(message.chat.id,
                         text='Переход к файлу с подборкой',
                         reply_markup=markup)

    elif message.text == 'Назад':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Что такое СЭВ?')
        btn2 = types.KeyboardButton('Что такое СПВ?')
        btn3 = types.KeyboardButton('Что такое ССВ?')
        markup.add(btn1, btn2, btn3)
        text = 'Про какой синдром выгорания ты хочешь еще узнать?'
        bot.send_message(message.chat.id,
                         text,
                         reply_markup=markup)

    elif message.text in ('Вернутся назад', 'Пропустить опрос'):
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = telebot.types.KeyboardButton('Факты')
        btn2 = telebot.types.KeyboardButton('Симптомы')
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id,
                         text='Я подобрал для тебя интересные факты о синдроме выгорания и симптомы, характерные для него',
                         reply_markup=markup)
    elif message.text == 'Спасибо':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn = types.KeyboardButton('Привет')
        markup.add(btn)
        bot.send_message(message.chat.id,
                         text='Надеюсь, я тебе помог. Вссего хорошего!',
                         reply_markup=markup)

    elif message.text == 'Привет':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = telebot.types.KeyboardButton("Что я могу?")
        # button2 = telebot.types.KeyboardButton('Факт')
        # button3 = telebot.types.KeyboardButton('Опрос')
        # button4 = telebot.types.KeyboardButton('Симптомы выгорания')
        markup.add(button1)
        texts = f"Привет, {message.from_user.first_name}!) Меня зовут BOSS и я твой гайд по студенческому выгоранию 🔥"
        bot.send_message(message.chat.id,
                         texts,
                         reply_markup=markup)


bot.polling(none_stop=True)
